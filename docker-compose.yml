version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - kafka
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=todo_db
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_GROUP_ID=todo-bot-group
      - KAFKA_TOPIC_TASK_CREATED=task-created
      - KAFKA_TOPIC_TASK_UPDATED=task-updated
      - KAFKA_TOPIC_TASK_DELETED=task-deleted
      - KAFKA_TOPIC_TASK_OVERDUE=task-overdue
      - KAFKA_TOPIC_NOTIFICATIONS=notifications
    networks:
      - todo-network
    ports:
      - "8080:8080"

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todo_db
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    networks:
      - todo-network

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - todo-network

volumes:
  postgres_data:

networks:
  todo-network:
    driver: bridge